//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogic.SubscriptionServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubscriptionServiceReference.ISubscriptionService")]
    public interface ISubscriptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetPaymentCardTypeDetails", ReplyAction="http://tempuri.org/ISubscriptionService/GetPaymentCardTypeDetailsResponse")]
        System.Collections.Generic.List<BusinessObjects.PaymentCardTypes> GetPaymentCardTypeDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetPaymentCardTypeDetails", ReplyAction="http://tempuri.org/ISubscriptionService/GetPaymentCardTypeDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.PaymentCardTypes>> GetPaymentCardTypeDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptionOptions", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionOptionsResponse")]
        System.Collections.Generic.List<BusinessObjects.SubscriptionOption> GetSubscriptionOptions(string subscriptionOptionCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetSubscriptionOptions", ReplyAction="http://tempuri.org/ISubscriptionService/GetSubscriptionOptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.SubscriptionOption>> GetSubscriptionOptionsAsync(string subscriptionOptionCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/SaveSubscriptionData", ReplyAction="http://tempuri.org/ISubscriptionService/SaveSubscriptionDataResponse")]
        string SaveSubscriptionData(string subscriptionCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/SaveSubscriptionData", ReplyAction="http://tempuri.org/ISubscriptionService/SaveSubscriptionDataResponse")]
        System.Threading.Tasks.Task<string> SaveSubscriptionDataAsync(string subscriptionCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetPlanDetails", ReplyAction="http://tempuri.org/ISubscriptionService/GetPlanDetailsResponse")]
        string GetPlanDetails(string subscriptionCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/GetPlanDetails", ReplyAction="http://tempuri.org/ISubscriptionService/GetPlanDetailsResponse")]
        System.Threading.Tasks.Task<string> GetPlanDetailsAsync(string subscriptionCriteria);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubscriptionServiceChannel : BusinessLogic.SubscriptionServiceReference.ISubscriptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriptionServiceClient : System.ServiceModel.ClientBase<BusinessLogic.SubscriptionServiceReference.ISubscriptionService>, BusinessLogic.SubscriptionServiceReference.ISubscriptionService {
        
        public SubscriptionServiceClient() {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BusinessObjects.PaymentCardTypes> GetPaymentCardTypeDetails() {
            return base.Channel.GetPaymentCardTypeDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.PaymentCardTypes>> GetPaymentCardTypeDetailsAsync() {
            return base.Channel.GetPaymentCardTypeDetailsAsync();
        }
        
        public System.Collections.Generic.List<BusinessObjects.SubscriptionOption> GetSubscriptionOptions(string subscriptionOptionCriteria) {
            return base.Channel.GetSubscriptionOptions(subscriptionOptionCriteria);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.SubscriptionOption>> GetSubscriptionOptionsAsync(string subscriptionOptionCriteria) {
            return base.Channel.GetSubscriptionOptionsAsync(subscriptionOptionCriteria);
        }
        
        public string SaveSubscriptionData(string subscriptionCriteria) {
            return base.Channel.SaveSubscriptionData(subscriptionCriteria);
        }
        
        public System.Threading.Tasks.Task<string> SaveSubscriptionDataAsync(string subscriptionCriteria) {
            return base.Channel.SaveSubscriptionDataAsync(subscriptionCriteria);
        }
        
        public string GetPlanDetails(string subscriptionCriteria) {
            return base.Channel.GetPlanDetails(subscriptionCriteria);
        }
        
        public System.Threading.Tasks.Task<string> GetPlanDetailsAsync(string subscriptionCriteria) {
            return base.Channel.GetPlanDetailsAsync(subscriptionCriteria);
        }
    }
}
