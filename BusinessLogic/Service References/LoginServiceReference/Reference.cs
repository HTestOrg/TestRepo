//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogic.LoginServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginServiceReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ValidateLogin", ReplyAction="http://tempuri.org/ILoginService/ValidateLoginResponse")]
        string ValidateLogin(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ValidateLogin", ReplyAction="http://tempuri.org/ILoginService/ValidateLoginResponse")]
        System.Threading.Tasks.Task<string> ValidateLoginAsync(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangePassword", ReplyAction="http://tempuri.org/ILoginService/ChangePasswordResponse")]
        string ChangePassword(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangePassword", ReplyAction="http://tempuri.org/ILoginService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<string> ChangePasswordAsync(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUserDetails", ReplyAction="http://tempuri.org/ILoginService/GetUserDetailsResponse")]
        string GetUserDetails(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUserDetails", ReplyAction="http://tempuri.org/ILoginService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<string> GetUserDetailsAsync(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ValidationSecQuestions", ReplyAction="http://tempuri.org/ILoginService/ValidationSecQuestionsResponse")]
        string ValidationSecQuestions(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ValidationSecQuestions", ReplyAction="http://tempuri.org/ILoginService/ValidationSecQuestionsResponse")]
        System.Threading.Tasks.Task<string> ValidationSecQuestionsAsync(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/LoginUser", ReplyAction="http://tempuri.org/ILoginService/LoginUserResponse")]
        string LoginUser(string userCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/LoginUser", ReplyAction="http://tempuri.org/ILoginService/LoginUserResponse")]
        System.Threading.Tasks.Task<string> LoginUserAsync(string userCriteria);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : BusinessLogic.LoginServiceReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<BusinessLogic.LoginServiceReference.ILoginService>, BusinessLogic.LoginServiceReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ValidateLogin(string userCriteria) {
            return base.Channel.ValidateLogin(userCriteria);
        }
        
        public System.Threading.Tasks.Task<string> ValidateLoginAsync(string userCriteria) {
            return base.Channel.ValidateLoginAsync(userCriteria);
        }
        
        public string ChangePassword(string userCriteria) {
            return base.Channel.ChangePassword(userCriteria);
        }
        
        public System.Threading.Tasks.Task<string> ChangePasswordAsync(string userCriteria) {
            return base.Channel.ChangePasswordAsync(userCriteria);
        }
        
        public string GetUserDetails(string userCriteria) {
            return base.Channel.GetUserDetails(userCriteria);
        }
        
        public System.Threading.Tasks.Task<string> GetUserDetailsAsync(string userCriteria) {
            return base.Channel.GetUserDetailsAsync(userCriteria);
        }
        
        public string ValidationSecQuestions(string userCriteria) {
            return base.Channel.ValidationSecQuestions(userCriteria);
        }
        
        public System.Threading.Tasks.Task<string> ValidationSecQuestionsAsync(string userCriteria) {
            return base.Channel.ValidationSecQuestionsAsync(userCriteria);
        }
        
        public string LoginUser(string userCriteria) {
            return base.Channel.LoginUser(userCriteria);
        }
        
        public System.Threading.Tasks.Task<string> LoginUserAsync(string userCriteria) {
            return base.Channel.LoginUserAsync(userCriteria);
        }
    }
}
