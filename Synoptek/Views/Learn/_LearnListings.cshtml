@model  PagedList.IPagedList<BusinessObjects.LearnModel>
@using PagedList.Mvc;

<div class="row pt-2">
    @foreach (var item in Model)
    {
        string LearnID = Synoptek.SessionManagement.CipherTool.EncryptString(Convert.ToString(@item.ID), true);
        string TopicID = Synoptek.SessionManagement.CipherTool.EncryptString(Convert.ToString(@item.TopicID), true);
        <div class="col-md-3" id="RowID_@(item.ID)">

            @if (Synoptek.SessionController.UserSession.UserId != null && Synoptek.SessionController.UserSession.RoleType == "Admin")
            {
                if (@item.ResourcePath != null && item.ResourcePath != "")
                {
                    <a href="@Url.Action("GetSingleLearnDetails","Learn", new { LearnID = LearnID , TopicID = TopicID })" class="marginRT5 ">
                        <img src="@item.ResourcePath" class="img-fluid mb-2 cursorPointer height145" alt="@item.ResourcePath">
                    </a>
                }
                else
                {
                    <a href="@Url.Action("GetSingleLearnDetails","Learn", new { LearnID = LearnID , TopicID = TopicID })" class="marginRT5 ">
                        <img src="~/images/opportunities-openThumb.png" class="img-fluid mb-2 cursorPointer height145" alt="@item.Name">
                    </a>
                }
            }
            else if (Synoptek.SessionController.UserSession.UserId == null)
            {
                if (item.ContentTypeID == 0)
                {
                    if (@item.ResourcePath != null && item.ResourcePath != "")
                    {
                        <a href="@Url.Action("GetSingleLearnDetails", "Learn", new { LearnID = LearnID, TopicID = TopicID })" class="marginRT5 ">
                            <img src="@item.ResourcePath" class="img-fluid mb-2 cursorPointer height145" alt="@item.ResourcePath">
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("GetSingleLearnDetails", "Learn", new { LearnID = LearnID, TopicID = TopicID })" class="marginRT5 ">
                            <img src="~/images/opportunities-openThumb.png" class="img-fluid mb-2 cursorPointer height145" alt="@item.Name">
                        </a>
                    }
                }
                else
                {
                    if (@item.ResourcePath != null && item.ResourcePath != "")
                    {
                        <img src="@item.ResourcePath" class="img-fluid mb-2 cursorPointer height145" alt="@item.ResourcePath" onclick="GetRoleAccessPopup()">
                    }
                    else
                    {
                        <img src="~/images/opportunities-lockThumb.png" class="img-fluid mb-2 cursorPointer height145" alt="@item.Name" onclick="GetRoleAccessPopup()">
                    }
                }

            }
            else if (Synoptek.SessionController.UserSession.UserId != null && Synoptek.SessionController.UserSession.IsPaid == false)
            {
                if (@item.ContentTypeID == 1)
                {
                    if (@item.ResourcePath != null && item.ResourcePath != "")
                    {
                        <a href="@Url.Action("GetSingleLearnDetails", "Learn", new { LearnID = LearnID, TopicID = TopicID })" class="marginRT5 ">
                            <img src="@item.ResourcePath" class="img-fluid mb-2 cursorPointer height145" alt="@item.ResourcePath">
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("GetSingleLearnDetails", "Learn", new { LearnID = LearnID, TopicID = TopicID })" class="marginRT5 ">
                            <img src="~/images/opportunities-openThumb.png" class="img-fluid mb-2 cursorPointer height145" alt="@item.Name">
                        </a>
                    }
                }
                else
                {
                    if (@item.ResourcePath != null && item.ResourcePath != "")
                    {
                        <img src="@item.ResourcePath" class="img-fluid mb-2 cursorPointer height145" alt="@item.ResourcePath" onclick="GetPaywallPopup()">
                    }
                    else
                    {
                        <img src="~/images/opportunities-lockThumb.png" class="img-fluid mb-2 cursorPointer height145" alt="@item.Name" onclick="GetPaywallPopup()">
                    }
                }
            }
            else if (Synoptek.SessionController.UserSession.UserId != null && (Synoptek.SessionController.UserSession.RoleType == "Investor" || Synoptek.SessionController.UserSession.RoleType == "Broker"))
            {
                if (@item.ResourcePath != null && item.ResourcePath != "")
                {
                    <a href="@Url.Action("GetSingleLearnDetails", "Learn", new { LearnID = LearnID, TopicID = TopicID })" class="marginRT5 ">
                        <img src="@item.ResourcePath" class="img-fluid mb-2 cursorPointer height145" alt="@item.ResourcePath">
                    </a>
                }
                else
                {
                    <a href="@Url.Action("GetSingleLearnDetails", "Learn", new { LearnID = LearnID, TopicID = TopicID })" class="marginRT5 ">
                        <img src="~/images/opportunities-openThumb.png" class="img-fluid mb-2 cursorPointer height145" alt="@item.Name">
                    </a>
                }
            }

            <h4><span id="lbl_Name@(item.ID)">@Html.Raw(item.Name)</span></h4>
            <h5 class="category">@(item.LearnTypeName.ToUpper()) - @(item.TopicName.ToUpper()) (@item.ContentForName)</h5>
            <p><div id="lbl_description@(item.ID)">@Html.Raw(item.Description)</div></p>

            @Html.HiddenFor(modelItem => item.Name, new { id = "hdnName" + item.ID })
            @Html.HiddenFor(modelItem => item.Description, new { id = "hdnDescription" + item.ID, @class = "listing-description" })
        </div>
    }

</div>
@if (Model.Count <= 0)
            {
    <div>
        <h4 class="text-center">No resources found</h4>
    </div>
}

<nav aria-label="Page navigation pagination">
    <ul class="pagination justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("LearnListingDetailsPartial", new { Page = page }))
    </ul>
</nav>


<script>
    $(document).ready(function () {
        //Pagination event handling ----------------------------
        $('.pagination a').click(function () {
            try {
                var SortingBy = $("#SortingOrder").val();
                var SearchCriteria = $("#SearchText").val();
                var ExperienceLevel = $("#SelectedExperienceLevel").val();
                var SelectedTopic = $("#SelectedTopic").val();
                if (this.href != "" && this.href != undefined) {
                    $.ajax({
                        url: this.href,
                        data: { SortingBy: SortingBy, ExperienceLevel: ExperienceLevel, SelectedTopic: SelectedTopic, SearchCriteria: SearchCriteria },
                        type: 'GET',
                        cache: false,
                        success: function (result) {
                            if ($('#LearnListingPartial').html() != undefined) {
                                $('#LearnListingPartial').html(result);
                            }
                            if ($('#searchResult').html() != undefined) {
                                $('#searchResult').html(result);
                            }
                        }
                    });
                }
                return false;
            }
            catch (ex) {
                ShowErrorMessage(ex.message);
            }
        });
        //Pagination event handling ----------------------------
    });

    $("document").ready(function () {
        $(".pagination").find("li").addClass("page-item");
        $(".pagination").find("li a").addClass("page-link");
    });


    function GetSingleLearnDetails(learnID, TopicID) {
        window.location.href = "/Learn/GetSingleLearnDetails?LearnID=" + learnID + "&TopicID=" + TopicID;
    }

    function DeleteDeal(learnID) {
        var Id = learnID
        bootbox.confirm({
            message: "Do you want to delete this resource?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        url: "Delete",
                        data: { learnID: Id },
                        success: function (result) {
                            setSessionValues();
                            SearchDeals();
                        },
                        error: function (result) {
                        }
                    });
                }
            }
        });
    }

    function GetRoleAccessPopup() {
        $.ajax({
            url: "/UserRegistration/Register",
            success: function (result) {
                $("#SignUpModal").modal();
                $("#Signupcontent").html(result);
            }
        });
    }

    function GetPaywallPopup() {
        $.ajax({
            url: "/Subscription/GetSubscriptionPopup",
            data: { roleID: 3 },//for now display the investor paywall
            success: function (result) {
                $("#SubscriptionpModal").modal();
                $("#SubscriptionContent").html(result);
            }
        });
    }
</script>